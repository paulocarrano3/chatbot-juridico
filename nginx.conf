worker_processes 1;

events {
    worker_connections 1024;
}

http {

    # tell NGINX to respond with MIME types (which can be useful for browsers, for example)
    include mime.types;

    server {
        listen 80;
        server_name 0.0.0.0; # who to respond to (0.0.0.0 for public access)

        # Route /
        location / {
            proxy_pass http://unix:/shared/chatbotsocket.sock; # tell NGINX to act as a proxy server to an upstream
            
            # It's important for NGINX to also forward request info to our servers.
            # Therefore, we can set the headers with values contained in variables. We don't want the requests to appear comming from NGINX.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

}